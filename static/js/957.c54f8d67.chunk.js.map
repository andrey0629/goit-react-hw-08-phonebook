{"version":3,"file":"static/js/957.c54f8d67.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/checkbox/src/checkbox-context.ts","../node_modules/@chakra-ui/checkbox/src/checkbox-icon.tsx","../node_modules/@chakra-ui/visually-hidden/src/visually-hidden.style.ts","../node_modules/@zag-js/dom-query/src/platform.ts","../node_modules/@zag-js/dom-query/src/index.ts","../node_modules/@zag-js/focus-visible/src/index.ts","../node_modules/utilities/object-utils/src/omit.ts","../node_modules/@chakra-ui/checkbox/src/use-checkbox.ts","../node_modules/@chakra-ui/checkbox/src/checkbox.tsx","../node_modules/@chakra-ui/checkbox/src/use-initial-animation-state.tsx","components/FormLogIn/FormLogIn.jsx","page/Login.jsx"],"sourcesContent":["import { createContext } from \"@chakra-ui/react-context\"\nimport { CheckboxGroupContext } from \"./checkbox-types\"\n\nexport const [CheckboxGroupProvider, useCheckboxGroupContext] =\n  createContext<CheckboxGroupContext>({\n    name: \"CheckboxGroupContext\",\n    strict: false,\n  })\n","import { chakra, HTMLChakraProps, PropsOf } from \"@chakra-ui/system\"\n\nfunction CheckIcon(props: PropsOf<typeof chakra.svg>) {\n  return (\n    <chakra.svg\n      width=\"1.2em\"\n      viewBox=\"0 0 12 10\"\n      style={{\n        fill: \"none\",\n        strokeWidth: 2,\n        stroke: \"currentColor\",\n        strokeDasharray: 16,\n      }}\n      {...props}\n    >\n      <polyline points=\"1.5 6 4.5 9 10.5 1\" />\n    </chakra.svg>\n  )\n}\n\nfunction IndeterminateIcon(props: PropsOf<typeof chakra.svg>) {\n  return (\n    <chakra.svg\n      width=\"1.2em\"\n      viewBox=\"0 0 24 24\"\n      style={{ stroke: \"currentColor\", strokeWidth: 4 }}\n      {...props}\n    >\n      <line x1=\"21\" x2=\"3\" y1=\"12\" y2=\"12\" />\n    </chakra.svg>\n  )\n}\n\nexport interface CheckboxIconProps extends HTMLChakraProps<\"svg\"> {\n  /**\n   * @default false\n   */\n  isIndeterminate?: boolean\n  /**\n   * @default false\n   */\n  isChecked?: boolean\n}\n\n/**\n * CheckboxIcon is used to visually indicate the checked or indeterminate\n * state of a checkbox.\n *\n * @todo allow users pass their own icon svgs\n */\nexport function CheckboxIcon(props: CheckboxIconProps) {\n  const { isIndeterminate, isChecked, ...rest } = props\n  const BaseIcon = isIndeterminate ? IndeterminateIcon : CheckIcon\n\n  return isChecked || isIndeterminate ? (\n    <chakra.div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100%\",\n      }}\n    >\n      <BaseIcon {...rest} />\n    </chakra.div>\n  ) : null\n}\n","/**\n * Styles to visually hide an element\n * but make it accessible to screen-readers\n */\nexport const visuallyHiddenStyle: React.CSSProperties = {\n  border: \"0\",\n  clip: \"rect(0, 0, 0, 0)\",\n  height: \"1px\",\n  width: \"1px\",\n  margin: \"-1px\",\n  padding: \"0\",\n  overflow: \"hidden\",\n  whiteSpace: \"nowrap\",\n  position: \"absolute\",\n}\n","export const isDom = () => typeof document !== \"undefined\"\n\nexport function getPlatform() {\n  const agent = (navigator as any).userAgentData\n  return agent?.platform ?? navigator.platform\n}\n\nconst pt = (v: RegExp) => isDom() && v.test(getPlatform())\nconst ua = (v: RegExp) => isDom() && v.test(navigator.userAgent)\nconst vn = (v: RegExp) => isDom() && v.test(navigator.vendor)\n\nexport const isTouchDevice = () => isDom() && !!navigator.maxTouchPoints\nexport const isMac = () => pt(/^Mac/) && !isTouchDevice()\nexport const isIPhone = () => pt(/^iPhone/)\nexport const isSafari = () => isApple() && vn(/apple/i)\nexport const isFirefox = () => ua(/firefox\\//i)\nexport const isApple = () => pt(/mac|iphone|ipad|ipod/i)\nexport const isIos = () => isApple() && !isMac()\n","export * from \"./attrs\"\nexport * from \"./contains\"\nexport * from \"./create-scope\"\nexport * from \"./env\"\nexport * from \"./get-active-element\"\nexport * from \"./get-by-id\"\nexport * from \"./get-by-text\"\nexport * from \"./get-by-typeahead\"\nexport * from \"./get-computed-style\"\nexport * from \"./get-event-target\"\nexport * from \"./get-scroll-parent\"\nexport * from \"./is-editable-element\"\nexport * from \"./is-html-element\"\nexport * from \"./platform\"\nexport * from \"./query\"\nexport * from \"./raf\"\n\nexport const MAX_Z_INDEX = 2147483647\n","import { isDom } from \"@zag-js/dom-query\"\n\ntype Modality = \"keyboard\" | \"pointer\" | \"virtual\"\ntype HandlerEvent = PointerEvent | MouseEvent | KeyboardEvent | FocusEvent\ntype Handler = (modality: Modality, e: HandlerEvent | null) => void\ntype FocusVisibleCallback = (isFocusVisible: boolean) => void\n\nlet hasSetup = false\nlet modality: Modality | null = null\nlet hasEventBeforeFocus = false\nlet hasBlurredWindowRecently = false\n\nconst handlers = new Set<Handler>()\n\nfunction trigger(modality: Modality, event: HandlerEvent | null) {\n  handlers.forEach((handler) => handler(modality, event))\n}\n\nconst isMac = typeof window !== \"undefined\" && window.navigator != null ? /^Mac/.test(window.navigator.platform) : false\n\nfunction isValidKey(e: KeyboardEvent) {\n  return !(\n    e.metaKey ||\n    (!isMac && e.altKey) ||\n    e.ctrlKey ||\n    e.key === \"Control\" ||\n    e.key === \"Shift\" ||\n    e.key === \"Meta\"\n  )\n}\n\nfunction onKeyboardEvent(event: KeyboardEvent) {\n  hasEventBeforeFocus = true\n  if (isValidKey(event)) {\n    modality = \"keyboard\"\n    trigger(\"keyboard\", event)\n  }\n}\n\nfunction onPointerEvent(event: PointerEvent | MouseEvent) {\n  modality = \"pointer\"\n\n  if (event.type === \"mousedown\" || event.type === \"pointerdown\") {\n    hasEventBeforeFocus = true\n    const target = event.composedPath ? event.composedPath()[0] : event.target\n\n    let matches = false\n    try {\n      matches = (target as any).matches(\":focus-visible\")\n    } catch {}\n\n    if (matches) return\n    trigger(\"pointer\", event)\n  }\n}\n\nfunction isVirtualClick(event: MouseEvent | PointerEvent): boolean {\n  // JAWS/NVDA with Firefox.\n  if ((event as any).mozInputSource === 0 && event.isTrusted) return true\n  return event.detail === 0 && !(event as PointerEvent).pointerType\n}\n\nfunction onClickEvent(e: MouseEvent) {\n  if (isVirtualClick(e)) {\n    hasEventBeforeFocus = true\n    modality = \"virtual\"\n  }\n}\n\nfunction onWindowFocus(event: FocusEvent) {\n  // Firefox fires two extra focus events when the user first clicks into an iframe:\n  // first on the window, then on the document. We ignore these events so they don't\n  // cause keyboard focus rings to appear.\n  if (event.target === window || event.target === document) {\n    return\n  }\n\n  // If a focus event occurs without a preceding keyboard or pointer event, switch to keyboard modality.\n  // This occurs, for example, when navigating a form with the next/previous buttons on iOS.\n  if (!hasEventBeforeFocus && !hasBlurredWindowRecently) {\n    modality = \"virtual\"\n    trigger(\"virtual\", event)\n  }\n\n  hasEventBeforeFocus = false\n  hasBlurredWindowRecently = false\n}\n\nfunction onWindowBlur() {\n  // When the window is blurred, reset state. This is necessary when tabbing out of the window,\n  // for example, since a subsequent focus event won't be fired.\n  hasEventBeforeFocus = false\n  hasBlurredWindowRecently = true\n}\n\nfunction isFocusVisible() {\n  return modality !== \"pointer\"\n}\n\nfunction setupGlobalFocusEvents() {\n  if (!isDom() || hasSetup) {\n    return\n  }\n\n  // Programmatic focus() calls shouldn't affect the current input modality.\n  // However, we need to detect other cases when a focus event occurs without\n  // a preceding user event (e.g. screen reader focus). Overriding the focus\n  // method on HTMLElement.prototype is a bit hacky, but works.\n  const { focus } = HTMLElement.prototype\n  HTMLElement.prototype.focus = function focusElement(...args) {\n    hasEventBeforeFocus = true\n    focus.apply(this, args)\n  }\n\n  document.addEventListener(\"keydown\", onKeyboardEvent, true)\n  document.addEventListener(\"keyup\", onKeyboardEvent, true)\n  document.addEventListener(\"click\", onClickEvent, true)\n\n  // Register focus events on the window so they are sure to happen\n  // before React's event listeners (registered on the document).\n  window.addEventListener(\"focus\", onWindowFocus, true)\n  window.addEventListener(\"blur\", onWindowBlur, false)\n\n  if (typeof PointerEvent !== \"undefined\") {\n    document.addEventListener(\"pointerdown\", onPointerEvent, true)\n    document.addEventListener(\"pointermove\", onPointerEvent, true)\n    document.addEventListener(\"pointerup\", onPointerEvent, true)\n  } else {\n    document.addEventListener(\"mousedown\", onPointerEvent, true)\n    document.addEventListener(\"mousemove\", onPointerEvent, true)\n    document.addEventListener(\"mouseup\", onPointerEvent, true)\n  }\n\n  hasSetup = true\n}\n\nexport function trackFocusVisible(fn: FocusVisibleCallback) {\n  setupGlobalFocusEvents()\n\n  fn(isFocusVisible())\n  const handler = () => fn(isFocusVisible())\n\n  handlers.add(handler)\n  return () => {\n    handlers.delete(handler)\n  }\n}\n\nexport function trackInteractionModality(fn: (value: Modality | null) => void) {\n  setupGlobalFocusEvents()\n\n  fn(modality)\n  const handler = () => fn(modality)\n\n  handlers.add(handler)\n  return () => {\n    handlers.delete(handler)\n  }\n}\n\nexport function setInteractionModality(value: Modality) {\n  modality = value\n  trigger(value, null)\n}\n\nexport function getInteractionModality() {\n  return modality\n}\n","export function omit<T extends Record<string, any>, K extends keyof T>(\n  object: T,\n  keysToOmit: K[] = [],\n) {\n  const clone: Record<string, unknown> = Object.assign({}, object)\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key as string]\n    }\n  }\n  return clone as Omit<T, K>\n}\n","import { useFormControlProps } from \"@chakra-ui/form-control\"\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\"\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\"\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\"\nimport type { PropGetter } from \"@chakra-ui/react-types\"\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport { callAllHandlers, dataAttr } from \"@chakra-ui/shared-utils\"\nimport { omit } from \"@chakra-ui/object-utils\"\nimport { visuallyHiddenStyle } from \"@chakra-ui/visually-hidden\"\nimport { trackFocusVisible } from \"@zag-js/focus-visible\"\nimport { useCallback, useEffect, useRef, useState } from \"react\"\nimport { CheckboxState, UseCheckboxProps } from \"./checkbox-types\"\n\n/**\n * useCheckbox that provides all the state and focus management logic\n * for a checkbox. It is consumed by the `Checkbox` component\n *\n * @see Docs https://chakra-ui.com/checkbox#hooks\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/checkbox/\n */\nexport function useCheckbox(props: UseCheckboxProps = {}) {\n  const formControlProps = useFormControlProps(props)\n  const {\n    isDisabled,\n    isReadOnly,\n    isRequired,\n    isInvalid,\n    id,\n    onBlur,\n    onFocus,\n    \"aria-describedby\": ariaDescribedBy,\n  } = formControlProps\n\n  const {\n    defaultChecked,\n    isChecked: checkedProp,\n    isFocusable,\n    onChange,\n    isIndeterminate,\n    name,\n    value,\n    tabIndex = undefined,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-invalid\": ariaInvalid,\n    ...rest\n  } = props\n\n  const htmlProps = omit(rest, [\n    \"isDisabled\",\n    \"isReadOnly\",\n    \"isRequired\",\n    \"isInvalid\",\n    \"id\",\n    \"onBlur\",\n    \"onFocus\",\n    \"aria-describedby\",\n  ])\n\n  const onChangeProp = useCallbackRef(onChange)\n  const onBlurProp = useCallbackRef(onBlur)\n  const onFocusProp = useCallbackRef(onFocus)\n\n  const [isFocusVisible, setIsFocusVisible] = useState(false)\n  const [isFocused, setFocused] = useState(false)\n  const [isHovered, setHovered] = useState(false)\n  const [isActive, setActive] = useState(false)\n\n  useEffect(() => {\n    return trackFocusVisible(setIsFocusVisible)\n  }, [])\n\n  const inputRef = useRef<HTMLInputElement>(null)\n  const [rootIsLabelElement, setRootIsLabelElement] = useState(true)\n\n  const [checkedState, setCheckedState] = useState(!!defaultChecked)\n\n  const isControlled = checkedProp !== undefined\n  const isChecked = isControlled ? checkedProp : checkedState\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (isReadOnly || isDisabled) {\n        event.preventDefault()\n        return\n      }\n\n      if (!isControlled) {\n        if (isChecked) {\n          setCheckedState(event.target.checked)\n        } else {\n          setCheckedState(isIndeterminate ? true : event.target.checked)\n        }\n      }\n\n      onChangeProp?.(event)\n    },\n    [\n      isReadOnly,\n      isDisabled,\n      isChecked,\n      isControlled,\n      isIndeterminate,\n      onChangeProp,\n    ],\n  )\n\n  useSafeLayoutEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = Boolean(isIndeterminate)\n    }\n  }, [isIndeterminate])\n\n  useUpdateEffect(() => {\n    if (isDisabled) {\n      setFocused(false)\n    }\n  }, [isDisabled, setFocused])\n\n  /**\n   * HTMLFormElement.reset() should reset the checkbox state\n   */\n  useSafeLayoutEffect(() => {\n    const el = inputRef.current\n    if (!el?.form) return\n    const formResetListener = () => {\n      setCheckedState(!!defaultChecked)\n    }\n    el.form.addEventListener(\"reset\", formResetListener)\n    return () => el.form?.removeEventListener(\"reset\", formResetListener)\n  }, [])\n\n  const trulyDisabled = isDisabled && !isFocusable\n\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key === \" \") {\n        setActive(true)\n      }\n    },\n    [setActive],\n  )\n\n  const onKeyUp = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key === \" \") {\n        setActive(false)\n      }\n    },\n    [setActive],\n  )\n\n  /**\n   * Sync state with uncontrolled form libraries like `react-hook-form`.\n   *\n   * These libraries set the checked value for input fields\n   * using their refs. For the checkbox, it sets `ref.current.checked = true | false` directly.\n   *\n   * This means the `isChecked` state will get out of sync with `ref.current.checked`,\n   * even though the input validation with work, the UI will not be up to date.\n   *\n   * Let's correct that by checking and syncing the state accordingly.\n   */\n  useSafeLayoutEffect(() => {\n    if (!inputRef.current) return\n    const notInSync = inputRef.current.checked !== isChecked\n    if (notInSync) {\n      setCheckedState(inputRef.current.checked)\n    }\n  }, [inputRef.current])\n\n  const getCheckboxProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) => {\n      const onPressDown = (event: React.MouseEvent) => {\n        // On mousedown, the input blurs and returns focus to the `body`,\n        // we need to prevent this. Native checkboxes keeps focus on `input`\n        if (isFocused) {\n          event.preventDefault()\n        }\n        setActive(true)\n      }\n\n      return {\n        ...props,\n        ref: forwardedRef,\n        \"data-active\": dataAttr(isActive),\n        \"data-hover\": dataAttr(isHovered),\n        \"data-checked\": dataAttr(isChecked),\n        \"data-focus\": dataAttr(isFocused),\n        \"data-focus-visible\": dataAttr(isFocused && isFocusVisible),\n        \"data-indeterminate\": dataAttr(isIndeterminate),\n        \"data-disabled\": dataAttr(isDisabled),\n        \"data-invalid\": dataAttr(isInvalid),\n        \"data-readonly\": dataAttr(isReadOnly),\n        \"aria-hidden\": true,\n        onMouseDown: callAllHandlers(props.onMouseDown, onPressDown),\n        onMouseUp: callAllHandlers(props.onMouseUp, () => setActive(false)),\n        onMouseEnter: callAllHandlers(props.onMouseEnter, () =>\n          setHovered(true),\n        ),\n        onMouseLeave: callAllHandlers(props.onMouseLeave, () =>\n          setHovered(false),\n        ),\n      }\n    },\n    [\n      isActive,\n      isChecked,\n      isDisabled,\n      isFocused,\n      isFocusVisible,\n      isHovered,\n      isIndeterminate,\n      isInvalid,\n      isReadOnly,\n    ],\n  )\n\n  const getIndicatorProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) => ({\n      ...props,\n      ref: forwardedRef,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-focus-visible\": dataAttr(isFocused && isFocusVisible),\n      \"data-indeterminate\": dataAttr(isIndeterminate),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n    }),\n    [\n      isActive,\n      isChecked,\n      isDisabled,\n      isFocused,\n      isFocusVisible,\n      isHovered,\n      isIndeterminate,\n      isInvalid,\n      isReadOnly,\n    ],\n  )\n\n  const getRootProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) => ({\n      ...htmlProps,\n      ...props,\n      ref: mergeRefs(forwardedRef, (node: HTMLElement) => {\n        if (!node) return\n        setRootIsLabelElement(node.tagName === \"LABEL\")\n      }),\n      onClick: callAllHandlers(props.onClick, () => {\n        /**\n         * Accessibility:\n         *\n         * Ideally, `getRootProps` should be spread unto a `label` element.\n         *\n         * If the element was changed using the `as` prop or changing\n         * the dom node `getRootProps` is spread unto (to a `div` or `span`), we'll trigger\n         * click on the input when the element is clicked.\n         * @see Issue https://github.com/chakra-ui/chakra-ui/issues/3480\n         */\n        if (!rootIsLabelElement) {\n          inputRef.current?.click()\n          requestAnimationFrame(() => {\n            inputRef.current?.focus({ preventScroll: true })\n          })\n        }\n      }),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid),\n    }),\n    [htmlProps, isDisabled, isChecked, isInvalid, rootIsLabelElement],\n  )\n\n  const getInputProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) => {\n      return {\n        ...props,\n        ref: mergeRefs(inputRef, forwardedRef),\n        type: \"checkbox\",\n        name,\n        value,\n        id,\n        tabIndex,\n        onChange: callAllHandlers(props.onChange, handleChange),\n        onBlur: callAllHandlers(props.onBlur, onBlurProp, () =>\n          setFocused(false),\n        ),\n        onFocus: callAllHandlers(props.onFocus, onFocusProp, () =>\n          setFocused(true),\n        ),\n        onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n        onKeyUp: callAllHandlers(props.onKeyUp, onKeyUp),\n        required: isRequired,\n        checked: isChecked,\n        disabled: trulyDisabled,\n        readOnly: isReadOnly,\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": ariaLabelledBy,\n        \"aria-invalid\": ariaInvalid ? Boolean(ariaInvalid) : isInvalid,\n        \"aria-describedby\": ariaDescribedBy,\n        \"aria-disabled\": isDisabled,\n        style: visuallyHiddenStyle,\n      }\n    },\n    [\n      name,\n      value,\n      id,\n      handleChange,\n      onBlurProp,\n      onFocusProp,\n      onKeyDown,\n      onKeyUp,\n      isRequired,\n      isChecked,\n      trulyDisabled,\n      isReadOnly,\n      ariaLabel,\n      ariaLabelledBy,\n      ariaInvalid,\n      isInvalid,\n      ariaDescribedBy,\n      isDisabled,\n      tabIndex,\n    ],\n  )\n\n  const getLabelProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) => ({\n      ...props,\n      ref: forwardedRef,\n      onMouseDown: callAllHandlers(props.onMouseDown, stopEvent),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid),\n    }),\n    [isChecked, isDisabled, isInvalid],\n  )\n\n  const state: CheckboxState = {\n    isInvalid,\n    isFocused,\n    isChecked,\n    isActive,\n    isHovered,\n    isIndeterminate,\n    isDisabled,\n    isReadOnly,\n    isRequired,\n  }\n\n  return {\n    state,\n    getRootProps,\n    getCheckboxProps,\n    getIndicatorProps,\n    getInputProps,\n    getLabelProps,\n    htmlProps,\n  }\n}\n\n/**\n * Prevent `onBlur` being fired when the checkbox label is touched\n */\nfunction stopEvent(event: React.SyntheticEvent) {\n  event.preventDefault()\n  event.stopPropagation()\n}\n\nexport type UseCheckboxReturn = ReturnType<typeof useCheckbox>\n","import { callAll, cx } from \"@chakra-ui/shared-utils\"\nimport {\n  HTMLChakraProps,\n  PropsOf,\n  SystemStyleObject,\n  ThemingProps,\n  chakra,\n  forwardRef,\n  keyframes,\n  omitThemingProps,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\nimport { cloneElement, useMemo } from \"react\"\nimport { useCheckboxGroupContext } from \"./checkbox-context\"\nimport { CheckboxIcon } from \"./checkbox-icon\"\nimport { CheckboxOptions, UseCheckboxProps } from \"./checkbox-types\"\nimport { useCheckbox } from \"./use-checkbox\"\nimport { useInitialAnimationState } from \"./use-initial-animation-state\"\n\nconst controlStyles: SystemStyleObject = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  verticalAlign: \"top\",\n  userSelect: \"none\",\n  flexShrink: 0,\n}\n\nconst rootStyles: SystemStyleObject = {\n  cursor: \"pointer\",\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  verticalAlign: \"top\",\n  position: \"relative\",\n}\n\nconst checkAnim = keyframes({\n  from: {\n    opacity: 0,\n    strokeDashoffset: 16,\n    transform: \"scale(0.95)\",\n  },\n  to: {\n    opacity: 1,\n    strokeDashoffset: 0,\n    transform: \"scale(1)\",\n  },\n})\n\nconst indeterminateOpacityAnim = keyframes({\n  from: {\n    opacity: 0,\n  },\n  to: {\n    opacity: 1,\n  },\n})\nconst indeterminateScaleAnim = keyframes({\n  from: {\n    transform: \"scaleX(0.65)\",\n  },\n  to: {\n    transform: \"scaleX(1)\",\n  },\n})\n\ntype CheckboxControlProps = Omit<HTMLChakraProps<\"div\">, keyof UseCheckboxProps>\n\ntype BaseInputProps = Pick<\n  PropsOf<\"input\">,\n  \"onBlur\" | \"checked\" | \"defaultChecked\"\n>\n\nexport interface CheckboxProps\n  extends CheckboxControlProps,\n    BaseInputProps,\n    ThemingProps<\"Checkbox\">,\n    UseCheckboxProps,\n    CheckboxOptions {}\n\n/**\n * Checkbox\n *\n * React component used in forms when a user needs to select\n * multiple values from several options.\n *\n * @see Docs https://chakra-ui.com/checkbox\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/checkbox/\n */\nexport const Checkbox = forwardRef<CheckboxProps, \"input\">(function Checkbox(\n  props,\n  ref,\n) {\n  const group = useCheckboxGroupContext()\n\n  const mergedProps = { ...group, ...props } as CheckboxProps\n  const styles = useMultiStyleConfig(\"Checkbox\", mergedProps)\n\n  const ownProps = omitThemingProps(props)\n\n  const {\n    spacing = \"0.5rem\",\n    className,\n    children,\n    iconColor,\n    iconSize,\n    icon = <CheckboxIcon />,\n    isChecked: isCheckedProp,\n    isDisabled = group?.isDisabled,\n    onChange: onChangeProp,\n    inputProps,\n    ...rest\n  } = ownProps\n\n  let isChecked = isCheckedProp\n  if (group?.value && ownProps.value) {\n    isChecked = group.value.includes(ownProps.value)\n  }\n\n  let onChange = onChangeProp\n  if (group?.onChange && ownProps.value) {\n    onChange = callAll(group.onChange, onChangeProp)\n  }\n\n  const {\n    state,\n    getInputProps,\n    getCheckboxProps,\n    getLabelProps,\n    getRootProps,\n  } = useCheckbox({\n    ...rest,\n    isDisabled,\n    isChecked,\n    onChange,\n  })\n\n  const shouldAnimate = useInitialAnimationState(state.isChecked)\n\n  const iconStyles: SystemStyleObject = useMemo(\n    () => ({\n      animation: !shouldAnimate\n        ? undefined\n        : state.isIndeterminate\n        ? `${indeterminateOpacityAnim} 20ms linear, ${indeterminateScaleAnim} 200ms linear`\n        : `${checkAnim} 200ms linear`,\n      fontSize: iconSize,\n      color: iconColor,\n      ...styles.icon,\n    }),\n    [iconColor, iconSize, shouldAnimate, state.isIndeterminate, styles.icon],\n  )\n\n  const clonedIcon = cloneElement(icon, {\n    __css: iconStyles,\n    isIndeterminate: state.isIndeterminate,\n    isChecked: state.isChecked,\n  })\n\n  return (\n    <chakra.label\n      __css={{ ...rootStyles, ...styles.container }}\n      className={cx(\"chakra-checkbox\", className)}\n      {...getRootProps()}\n    >\n      <input\n        className=\"chakra-checkbox__input\"\n        {...getInputProps(inputProps, ref)}\n      />\n      <chakra.span\n        __css={{ ...controlStyles, ...styles.control }}\n        className=\"chakra-checkbox__control\"\n        {...getCheckboxProps()}\n      >\n        {clonedIcon}\n      </chakra.span>\n      {children && (\n        <chakra.span\n          className=\"chakra-checkbox__label\"\n          {...getLabelProps()}\n          __css={{\n            marginStart: spacing,\n            ...styles.label,\n          }}\n        >\n          {children}\n        </chakra.span>\n      )}\n    </chakra.label>\n  )\n})\n\nCheckbox.displayName = \"Checkbox\"\n","import { useState } from \"react\"\n\nexport function useInitialAnimationState(isChecked: boolean) {\n  const [previousIsChecked, setPreviousIsChecked] = useState(isChecked)\n  const [shouldAnimate, setShouldAnimate] = useState(false)\n\n  if (isChecked !== previousIsChecked) {\n    setShouldAnimate(true)\n    setPreviousIsChecked(isChecked)\n  }\n\n  return shouldAnimate\n}\n","import { Formik, Field } from 'formik';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Flex,\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  Input,\n  VStack,\n} from '@chakra-ui/react';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\n\nexport default function FormLogIn() {\n  const dispatch = useDispatch();\n\n  return (\n    <Flex align=\"center\" justify=\"center\">\n      <Box bg=\"inherit\" p={6} rounded=\"md\" w={500}>\n        <Formik\n          initialValues={{\n            email: '',\n            password: '',\n            rememberMe: false,\n          }}\n          onSubmit={values => {\n            dispatch(\n              logIn({\n                email: values.email,\n                password: values.password,\n              })\n            );\n          }}\n        >\n          {({ handleSubmit, errors, touched }) => (\n            <form onSubmit={handleSubmit}>\n              <VStack spacing={4} align=\"flex-start\">\n                <FormControl>\n                  <FormLabel htmlFor=\"email\">Email Address</FormLabel>\n                  <Field\n                    border=\"1px\"\n                    solid=\"#787882 \"\n                    as={Input}\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    variant=\"filled\"\n                  />\n                </FormControl>\n                <FormControl isInvalid={!!errors.password && touched.password}>\n                  <FormLabel htmlFor=\"password\">Password</FormLabel>\n                  <Field\n                    border=\"1px\"\n                    solid=\"#787882 \"\n                    as={Input}\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    variant=\"filled\"\n                    validate={value => {\n                      let error;\n\n                      if (value.length < 6) {\n                        error = 'Password must contain at least 6 characters';\n                      }\n\n                      return error;\n                    }}\n                  />\n                  <FormErrorMessage>{errors.password}</FormErrorMessage>\n                </FormControl>\n                <Field\n                  border=\"#787882 \"\n                  as={Checkbox}\n                  id=\"rememberMe\"\n                  name=\"rememberMe\"\n                  colorScheme=\"purple\"\n                >\n                  Remember me?\n                </Field>\n                <Button type=\"submit\" colorScheme=\"purple\" width=\"full\">\n                  Login\n                </Button>\n              </VStack>\n            </form>\n          )}\n        </Formik>\n      </Box>\n    </Flex>\n  );\n}\n","import FormLogIn from 'components/FormLogIn/FormLogIn';\n\nconst LogIn = () => {\n  return (\n    <div>\n      <FormLogIn />\n    </div>\n  );\n};\nexport default LogIn;\n"],"names":["_createContext","createContext","name","strict","_createContext2","_slicedToArray","useCheckboxGroupContext","CheckIcon","props","jsx","chakra","_objectSpread","width","viewBox","style","fill","strokeWidth","stroke","strokeDasharray","children","points","IndeterminateIcon","x1","x2","y1","y2","CheckboxIcon","isIndeterminate","isChecked","rest","_objectWithoutProperties","_excluded","BaseIcon","display","alignItems","justifyContent","height","visuallyHiddenStyle","border","clip","margin","padding","overflow","whiteSpace","position","isDom","document","hasSetup","modality","hasEventBeforeFocus","hasBlurredWindowRecently","handlers","Set","trigger","modality2","event","forEach","handler","isMac","window","navigator","test","platform","onKeyboardEvent","e","metaKey","altKey","ctrlKey","key","onPointerEvent","type","target","composedPath","matches","_unused","onClickEvent","mozInputSource","isTrusted","detail","pointerType","onWindowFocus","onWindowBlur","isFocusVisible","setupGlobalFocusEvents","focus","HTMLElement","prototype","_len","arguments","length","args","Array","_key","apply","this","addEventListener","PointerEvent","trackFocusVisible","fn","add","delete","omit","object","_step","keysToOmit","undefined","clone","Object","assign","_iterator","_createForOfIteratorHelper","s","n","done","value","err","f","stopEvent","preventDefault","stopPropagation","controlStyles","verticalAlign","userSelect","flexShrink","rootStyles","cursor","checkAnim","keyframes","from","opacity","strokeDashoffset","transform","to","indeterminateOpacityAnim","indeterminateScaleAnim","Checkbox","forwardRef","ref","group","mergedProps","styles","useMultiStyleConfig","ownProps","omitThemingProps","_ownProps$spacing","spacing","className","iconColor","iconSize","_ownProps$icon","icon","isCheckedProp","_ownProps$isDisabled","isDisabled","onChangeProp","onChange","inputProps","includes","callAll","_useCheckbox","formControlProps","useFormControlProps","isReadOnly","isRequired","isInvalid","id","onBlur","onFocus","ariaDescribedBy","defaultChecked","checkedProp","isFocusable","_props$tabIndex","tabIndex","ariaLabel","ariaLabelledBy","ariaInvalid","htmlProps","useCallbackRef","onBlurProp","onFocusProp","_useState","useState","_useState2","setIsFocusVisible","_useState3","_useState4","isFocused","setFocused","_useState5","_useState6","isHovered","setHovered","_useState7","_useState8","isActive","setActive","useEffect","inputRef","useRef","_useState9","_useState10","rootIsLabelElement","setRootIsLabelElement","_useState11","_useState12","checkedState","setCheckedState","isControlled","handleChange","useCallback","checked","useSafeLayoutEffect","current","indeterminate","Boolean","useUpdateEffect","el","form","formResetListener","_a","removeEventListener","trulyDisabled","onKeyDown","onKeyUp","getCheckboxProps","props2","forwardedRef","onPressDown","dataAttr","onMouseDown","callAllHandlers","onMouseUp","onMouseEnter","onMouseLeave","getIndicatorProps","getRootProps","mergeRefs","node","tagName","onClick","click","requestAnimationFrame","_a2","preventScroll","getInputProps","required","disabled","readOnly","getLabelProps","state","useCheckbox","shouldAnimate","previousIsChecked","setPreviousIsChecked","setShouldAnimate","useInitialAnimationState","iconStyles","useMemo","animation","concat","fontSize","color","clonedIcon","cloneElement","__css","jsxs","container","cx","control","marginStart","label","displayName","FormLogIn","dispatch","useDispatch","_jsx","Flex","align","justify","Box","bg","p","rounded","w","Formik","initialValues","email","password","rememberMe","onSubmit","values","logIn","_ref","handleSubmit","errors","touched","_jsxs","VStack","FormControl","FormLabel","htmlFor","Field","solid","as","Input","variant","validate","error","FormErrorMessage","colorScheme","Button"],"sourceRoot":""}