{"version":3,"file":"static/js/159.dcc65b2f.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactsList/Contacts.styled.jsx","components/Modal/Modal.styled.jsx","components/FormEdit/FormEdit.jsx","components/Modal/Modal.jsx","components/ContactsList/ContactsList.jsx","components/FormContacts/Form.styled.jsx","components/Filter/Filter.jsx","components/FormContacts/FormContacts.jsx","page/Contacts.jsx"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector([selectFilter, selectContacts], (filter, contacts) => {\n  const normalizedFilterName = filter.toLowerCase();\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilterName)\n  );\n  return filteredContacts;\n});\n\nexport const selectContactById = createSelector(\n  [selectContacts, (state, contactId) => contactId],\n  (contacts, contactId) => {\n    return contacts.find(contact => contact.id === contactId) || null;\n  }\n);","import { styled } from 'styled-components';\nimport { Button } from '@chakra-ui/react';\nconst List = styled.ul`\n  list-style: none;\n  padding: 0;\n  max-width: 100%;\n  margin: 0 auto;\n`;\n\nconst ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  border: 1px solid #787882;\n  margin-bottom: 5px;\n  border-radius: 5px;\n  flex-wrap: wrap;\n  flex-direction: column;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n    rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,\n    rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n`;\n\nconst ContactText = styled.p`\n  margin: 0;\n  font-weight: 500;\n\n  font-size: large;\n`;\n\nconst DeleteButton = styled(Button)`\n  background: #f87979 !important;\n  border-radius: 100px;\n  box-shadow: rgba(187, 44, 44, 0.2) 0 -25px 18px -14px inset,\n    rgba(187, 44, 44, 0.15) 0 1px 2px, rgba(187, 44, 44, 0.15) 0 2px 4px,\n    rgba(187, 44, 44, 0.15) 0 4px 8px, rgba(187, 44, 44, 0.15) 0 8px 16px,\n    rgba(187, 44, 44, 0.15) 0 16px 32px;\n  color: #020d04;\n  cursor: pointer;\n  display: inline-block;\n  font-family: CerebriSans-Regular, -apple-system, system-ui, Roboto, sans-serif;\n  padding: 7px 20px;\n  text-align: center;\n  text-decoration: none;\n  transition: all 250ms;\n  border: 0;\n  font-size: 18px;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n\n  &:hover {\n    box-shadow: rgba(187, 44, 44, 0.35) 0 -25px 18px -14px inset,\n      rgba(187, 44, 44, 0.25) 0 1px 2px, rgba(187, 44, 44, 0.25) 0 2px 4px,\n      rgba(187, 44, 44, 0.25) 0 4px 8px, rgba(187, 44, 44, 0.25) 0 8px 16px,\n      rgba(187, 44, 44, 0.25) 0 16px 32px;\n    transform: scale(1.05) rotate(-1deg);\n  }\n`;\nconst ButtonWrap = styled.div`\n  gap: 8px;\n  display: flex;\n`;\nconst ButtonEdit = styled(Button)`\n  transition: all 250ms;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  &:hover {\n    background-color: #13bd13 !important;\n    transform: scale(1.05) rotate(-1deg);\n  }\n`;\nexport const ContactWrap = styled.div`\n  display: flex;\n  gap: 5px;\n`;\nexport { List, ListItem, ContactText, ButtonWrap, DeleteButton, ButtonEdit };\n","import { styled } from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.8);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ModalWindow = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n  background-color: #fff;\n  padding: 5px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.5);\n  overflow-y: auto;\n  border-radius: 10px;\n  position: absolute;\n`;\n\nexport const ModalImg = styled.img`\n  max-width: 100%;\n  height: auto;\n  display: block;\n  margin: 0 auto;\n  border-radius: 10px;\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateContact } from 'redux/contacts/operations';\nimport { selectContactById } from 'redux/contacts/selectors';\n\nimport { Formik, Field } from 'formik';\nimport {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  Input,\n  VStack,\n} from '@chakra-ui/react';\n\nexport default function FormEdit({ currentContactId, onClose }) {\n  const dispatch = useDispatch();\n  const currentContact = useSelector(state =>\n    selectContactById(state, currentContactId)\n  );\n  return (\n    <Flex bg=\"gray.100\" align=\"center\" justify=\"center\">\n      <Box bg=\"white\" p={6} rounded=\"md\" w={500}>\n        <Formik\n          initialValues={{\n            name: currentContact ? currentContact.name : '',\n            number: currentContact ? currentContact.number : '',\n          }}\n          onSubmit={values => {\n            dispatch(updateContact({ id: currentContactId, values }));\n            onClose();\n          }}\n        >\n          {({ handleSubmit, errors, touched }) => (\n            <form onSubmit={handleSubmit}>\n              <VStack spacing={4} align=\"flex-start\">\n                <FormControl>\n                  <FormLabel htmlFor=\"email\">Name</FormLabel>\n                  <Field\n                    as={Input}\n                    id=\"name\"\n                    name=\"name\"\n                    type=\"text\"\n                    variant=\"filled\"\n                  />\n                </FormControl>\n                <FormControl>\n                  <FormLabel htmlFor=\"number\">Number</FormLabel>\n                  <Field\n                    as={Input}\n                    id=\"number\"\n                    name=\"number\"\n                    type=\"text\"\n                    variant=\"filled\"\n                  />\n                  <FormErrorMessage>{errors.password}</FormErrorMessage>\n                </FormControl>\n\n                <Button type=\"submit\" colorScheme=\"purple\" width=\"full\">\n                  Save\n                </Button>\n              </VStack>\n            </form>\n          )}\n        </Formik>\n      </Box>\n    </Flex>\n  );\n}\n","import { useEffect } from 'react';\nimport { Overlay, ModalWindow } from './Modal.styled';\nimport FormEdit from 'components/FormEdit/FormEdit';\n\nexport function Modal({ currentContactId, onClose }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeydownCloseModal);\n    return () => {\n      window.removeEventListener('keydown', handleKeydownCloseModal);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleKeydownCloseModal = evt => {\n    if (evt.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleClickMouseCloseModal = evt => {\n    if (evt.currentTarget === evt.target) {\n      onClose();\n    }\n  };\n  return (\n    <Overlay onClick={handleClickMouseCloseModal}>\n      <ModalWindow>\n        <FormEdit currentContactId={currentContactId} onClose={onClose} />\n      </ModalWindow>\n    </Overlay>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n  selectFilteredContacts,\n} from 'redux/contacts/selectors';\nimport {\n  List,\n  ListItem,\n  ContactText,\n  DeleteButton,\n  ButtonWrap,\n  ButtonEdit,\n  ContactWrap,\n} from './Contacts.styled';\nimport { ColorRing, FallingLines } from 'react-loader-spinner';\nimport { useState } from 'react';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Modal } from 'components/Modal/Modal';\nimport { createPortal } from 'react-dom';\nconst modalRoot = document.querySelector('#modal-root');\n\nfunction ContactsList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const isError = useSelector(selectError);\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const [isLoadingMap, setIsLoadingMap] = useState({});\n  const [currentContactId, setCurrentContactId] = useState(null);\n\n  const handleEditButtonClick = event => {\n    const { value } = event.currentTarget;\n    setCurrentContactId(value);\n  };\n\n  const closeModal = () => {\n    setCurrentContactId(null);\n  };\n  const handleClickDeleteButton = event => {\n    const { value } = event.currentTarget;\n    if (isLoadingMap[value]) {\n      return;\n    }\n    setIsLoadingMap(prevState => ({\n      ...prevState,\n      [value]: true,\n    }));\n    dispatch(deleteContact(value));\n  };\n\n  return (\n    <>\n      <div>\n        <List>\n          {isError && <p style={{ color: 'red', fontSize: 18 }}>{isError}</p>}\n          {isLoading && contacts.length === 0 ? (\n            <FallingLines\n              color=\"#4fa94d\"\n              width=\"100\"\n              visible={true}\n              ariaLabel=\"falling-lines-loading\"\n            />\n          ) : (\n            filteredContacts.map(contact => (\n              <ListItem key={contact.id}>\n                <ContactWrap>\n                  {' '}\n                  <ContactText>{contact.name}:</ContactText>\n                  <ContactText>{contact.number}</ContactText>\n                </ContactWrap>\n                <ButtonWrap>\n                  <DeleteButton\n                    type=\"button\"\n                    name=\"delete\"\n                    value={contact.id}\n                    disabled={isLoadingMap[contact.id]}\n                    onClick={handleClickDeleteButton}\n                  >\n                    {' '}\n                    {isLoadingMap[contact.id] && (\n                      <ColorRing visible={true} height=\"18\" width=\"18\" />\n                    )}{' '}\n                    Delete\n                  </DeleteButton>\n                  <ButtonEdit\n                    bgColor={'green.300'}\n                    type=\"button\"\n                    name=\"edit\"\n                    value={contact.id}\n                    onClick={handleEditButtonClick}\n                  >\n                    Edit\n                  </ButtonEdit>\n                </ButtonWrap>\n              </ListItem>\n            ))\n          )}\n        </List>\n      </div>\n      {currentContactId &&\n        createPortal(\n          <Modal currentContactId={currentContactId} onClose={closeModal} />,\n          modalRoot\n        )}\n    </>\n  );\n}\n\nexport default ContactsList;\n","import { styled } from 'styled-components';\nconst FormWrapper = styled.div`\n  max-width: 500px;\n  margin: 0 auto;\n`;\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  font-size: 18px;\n  padding: 10px;\n  margin-bottom: 10px;\n  border: 1px solid #787882;\n  border-radius: 5px;\n  background-color: #cbe5ee;\n`;\n\nconst StyledButton = styled.button`\n  width: 100%;\n  padding: 10px;\n  background-color: #007bff !important;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  border-radius: 5px;\n  font-size: 22px;\n  &:hover {\n    background-color: #0730d3;\n  }\n`;\n\nexport { FormWrapper, StyledForm, StyledButton, StyledInput };\n","import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { StyledInput, FormWrapper } from '../FormContacts/Form.styled';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\nfunction Filter() {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const handleChangeFilter = event => {\n    dispatch(setFilter(event.currentTarget.value));\n  };\n\n  return (\n    <FormWrapper>\n      <label>\n        Find contacts by name\n        <StyledInput\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={handleChangeFilter}\n        />\n      </label>\n    </FormWrapper>\n  );\n}\n\nexport default Filter;\n","import { useState } from 'react';\nimport { CircularProgress } from '@chakra-ui/react';\nimport {\n  FormWrapper,\n  StyledForm,\n  StyledButton,\n  StyledInput,\n} from './Form.styled';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts, selectIsLoading } from 'redux/contacts/selectors';\n\nfunction FormContacts() {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleAddContact = (name, number) => {\n    const newContact = { name: name.trim(), number: number.trim() };\n    dispatch(addContact(newContact));\n  };\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const existingContact = contacts.find(\n      contact => contact.name === name.trim()\n    );\n    if (existingContact) {\n      alert(name + ' is already in contacts!');\n      reset();\n      return;\n    }\n    handleAddContact(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormWrapper>\n      <StyledForm onSubmit={handleSubmit}>\n        <label>\n          Name\n          <StyledInput\n            value={name}\n            onChange={handleChange}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-ЯІіЇїҐґ' \\-\\u0400-\\u04FF]+$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n\n        <label>\n          Number\n          <StyledInput\n            value={number}\n            onChange={handleChange}\n            type=\"tel\"\n            name=\"number\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n\n        <StyledButton type=\"submit\" disabled={isLoading}>\n          {' '}\n          {isLoading && contacts.length !== 0 ? (\n            <CircularProgress isIndeterminate color=\"green.300\" />\n          ) : (\n            'Add contact'\n          )}\n        </StyledButton>\n      </StyledForm>\n    </FormWrapper>\n  );\n}\n\nexport default FormContacts;\n","import ContactsList from 'components/ContactsList/ContactsList';\nimport Filter from 'components/Filter/Filter';\nimport FormContacts from 'components/FormContacts/FormContacts';\nimport { SecondaryTitle } from 'components/Layout/Layout.styled';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <FormContacts />\n      <SecondaryTitle>Contacts</SecondaryTitle>\n      <Filter />\n      <ContactsList />\n    </>\n  );\n};\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","normalizedFilterName","toLowerCase","contact","name","includes","selectContactById","contactId","find","id","List","styled","_templateObject","_taggedTemplateLiteral","ListItem","_templateObject2","ContactText","_templateObject3","DeleteButton","Button","_templateObject4","ButtonWrap","_templateObject5","ButtonEdit","_templateObject6","ContactWrap","_templateObject7","Overlay","ModalWindow","FormEdit","_ref","currentContactId","onClose","dispatch","useDispatch","currentContact","useSelector","_jsx","Flex","bg","align","justify","children","Box","p","rounded","w","Formik","initialValues","number","onSubmit","values","updateContact","_ref2","handleSubmit","errors","touched","_jsxs","VStack","spacing","FormControl","FormLabel","htmlFor","Field","as","Input","type","variant","FormErrorMessage","password","colorScheme","width","Modal","useEffect","window","addEventListener","handleKeydownCloseModal","removeEventListener","evt","code","onClick","currentTarget","target","modalRoot","document","querySelector","isError","filteredContacts","_useState","useState","_useState2","_slicedToArray","isLoadingMap","setIsLoadingMap","_useState3","_useState4","setCurrentContactId","handleEditButtonClick","event","value","handleClickDeleteButton","prevState","_objectSpread","_defineProperty","deleteContact","_Fragment","style","color","fontSize","length","FallingLines","visible","ariaLabel","map","disabled","ColorRing","height","bgColor","createPortal","FormWrapper","StyledForm","StyledInput","StyledButton","onChange","setFilter","setName","setNumber","handleChange","_evt$target","reset","preventDefault","trim","alert","newContact","addContact","handleAddContact","pattern","title","required","CircularProgress","isIndeterminate","fetchContacts","FormContacts","SecondaryTitle","Filter","ContactsList"],"sourceRoot":""}