{"version":3,"file":"static/js/520.9d3cc7fb.chunk.js","mappings":"6SAce,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,MAAM,SAASC,QAAQ,SAAQC,UACnCJ,EAAAA,EAAAA,KAACK,EAAAA,GAAG,CAACC,GAAG,UAAUC,EAAG,EAAGC,QAAQ,KAAKC,EAAG,IAAIL,UAC1CJ,EAAAA,EAAAA,KAACU,EAAAA,GAAM,CACLC,cAAe,CACbC,KAAM,GACNC,MAAO,GACPC,SAAU,IAEZC,SAAU,SAAAC,GACRlB,GACEmB,EAAAA,EAAAA,IAAS,CACPL,KAAMI,EAAOJ,KACbC,MAAOG,EAAOH,MACdC,SAAUE,EAAOF,WAGvB,EAAEV,SAED,SAAAc,GAAA,IAAGC,EAAYD,EAAZC,aAAcC,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,QAAO,OAC/BrB,EAAAA,EAAAA,KAAA,QAAMe,SAAUI,EAAaf,UAC3BkB,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CAACC,QAAS,EAAGtB,MAAM,aAAYE,SAAA,EACpCkB,EAAAA,EAAAA,MAACG,EAAAA,GAAW,CAAArB,SAAA,EACVJ,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CAACC,QAAQ,OAAMvB,SAAC,eAC1BJ,EAAAA,EAAAA,KAAC4B,EAAAA,GAAK,CACJC,OAAO,MACPC,MAAM,WACNC,GAAIC,EAAAA,EACJC,GAAG,OACHrB,KAAK,OACLsB,KAAK,OACLC,QAAQ,eAGZb,EAAAA,EAAAA,MAACG,EAAAA,GAAW,CAAArB,SAAA,EACVJ,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CAACC,QAAQ,QAAOvB,SAAC,mBAC3BJ,EAAAA,EAAAA,KAAC4B,EAAAA,GAAK,CACJC,OAAO,MACPC,MAAM,WACNC,GAAIC,EAAAA,EACJC,GAAG,QACHrB,KAAK,QACLsB,KAAK,QACLC,QAAQ,eAGZb,EAAAA,EAAAA,MAACG,EAAAA,GAAW,CAACW,YAAahB,EAAON,UAAYO,EAAQP,SAASV,SAAA,EAC5DJ,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CAACC,QAAQ,WAAUvB,SAAC,cAC9BJ,EAAAA,EAAAA,KAAC4B,EAAAA,GAAK,CACJC,OAAO,MACPC,MAAM,WACNC,GAAIC,EAAAA,EACJC,GAAG,WACHrB,KAAK,WACLsB,KAAK,WACLC,QAAQ,SACRE,SAAU,SAAAC,GACR,IAAIC,EAMJ,OAJID,EAAME,OAAS,IACjBD,EAAQ,+CAGHA,CACT,KAEFvC,EAAAA,EAAAA,KAACyC,EAAAA,GAAgB,CAAArC,SAAEgB,EAAON,eAG5Bd,EAAAA,EAAAA,KAAC0C,EAAAA,EAAM,CAACR,KAAK,SAASS,YAAY,SAASC,MAAM,OAAMxC,SAAC,qBAIrD,OAMnB,CC9FA,IAOA,EAPqB,WACnB,OACEJ,EAAAA,EAAAA,KAAA,OAAAI,UACEJ,EAAAA,EAAAA,KAACH,EAAgB,KAGvB,C","sources":["components/FormRegistraction/FormRegistration.jsx","page/Registration.jsx"],"sourcesContent":["import { Formik, Field } from 'formik';\nimport {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  Input,\n  VStack,\n} from '@chakra-ui/react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\n\nexport default function FormRegistration() {\n  const dispatch = useDispatch();\n\n  return (\n    <Flex align=\"center\" justify=\"center\">\n      <Box bg=\"inherit\" p={6} rounded=\"md\" w={500}>\n        <Formik\n          initialValues={{\n            name: '',\n            email: '',\n            password: '',\n          }}\n          onSubmit={values => {\n            dispatch(\n              register({\n                name: values.name,\n                email: values.email,\n                password: values.password,\n              })\n            );\n          }}\n        >\n          {({ handleSubmit, errors, touched }) => (\n            <form onSubmit={handleSubmit}>\n              <VStack spacing={4} align=\"flex-start\">\n                <FormControl>\n                  <FormLabel htmlFor=\"name\">User name</FormLabel>\n                  <Field\n                    border=\"1px\"\n                    solid=\"#787882 \"\n                    as={Input}\n                    id=\"name\"\n                    name=\"name\"\n                    type=\"text\"\n                    variant=\"filled\"\n                  />\n                </FormControl>\n                <FormControl>\n                  <FormLabel htmlFor=\"email\">Email Address</FormLabel>\n                  <Field\n                    border=\"1px\"\n                    solid=\"#787882 \"\n                    as={Input}\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    variant=\"filled\"\n                  />\n                </FormControl>\n                <FormControl isInvalid={!!errors.password && touched.password}>\n                  <FormLabel htmlFor=\"password\">Password</FormLabel>\n                  <Field\n                    border=\"1px\"\n                    solid=\"#787882 \"\n                    as={Input}\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    variant=\"filled\"\n                    validate={value => {\n                      let error;\n\n                      if (value.length < 6) {\n                        error = 'Password must contain at least 6 characters';\n                      }\n\n                      return error;\n                    }}\n                  />\n                  <FormErrorMessage>{errors.password}</FormErrorMessage>\n                </FormControl>\n\n                <Button type=\"submit\" colorScheme=\"purple\" width=\"full\">\n                  Registration\n                </Button>\n              </VStack>\n            </form>\n          )}\n        </Formik>\n      </Box>\n    </Flex>\n  );\n}\n","import FormRegistration from 'components/FormRegistraction/FormRegistration';\n\nconst Registration = () => {\n  return (\n    <div>\n      <FormRegistration />\n    </div>\n  );\n};\nexport default Registration;\n"],"names":["FormRegistration","dispatch","useDispatch","_jsx","Flex","align","justify","children","Box","bg","p","rounded","w","Formik","initialValues","name","email","password","onSubmit","values","register","_ref","handleSubmit","errors","touched","_jsxs","VStack","spacing","FormControl","FormLabel","htmlFor","Field","border","solid","as","Input","id","type","variant","isInvalid","validate","value","error","length","FormErrorMessage","Button","colorScheme","width"],"sourceRoot":""}